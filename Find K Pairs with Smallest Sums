class Solution:
    def kSmallestPairs(self, nums1: List[int], nums2: List[int], k: int) -> List[List[int]]:
        heap = [[nums1[0]+nums2[0],0,0]]
        heapq.heapify(heap)
        ans = []
        visited = set((0,0))
        print(heap)

        def push(idx1, idx2):

            if idx1 < len(nums1) and idx2 < len(nums2) and (idx1, idx2) not in visited:
                heapq.heappush(heap,[ nums1[idx1] + nums2[idx2], idx1, idx2])
                visited.add((idx1, idx2))

        for i in range(k):
            if not heap:
                break
                
            smallest,ind1,ind2 = heapq.heappop(heap)
            ans.append([nums1[ind1] , nums2[ind2] ])

            push(ind1 + 1, ind2)
            push(ind1, ind2 + 1)
            
        return ans
            
