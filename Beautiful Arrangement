class Solution:
    def countArrangement(self, n: int) -> int:
        visited=0
        def helper(index,n,res):
            nonlocal visited
            nonlocal answer
            if index==n:
                if len(res)==n:
                    answer +=1
                return
            for i in range(n):
                if (visited>> i)&1 == 0 and (not (nums[i]%(len(res)+1)) or not ((len(res)+1)%nums[i])):
                    visited |= (1<<i)
                    res.append(nums[i])
                    helper(index+1,n,res)
                    visited &=~(1<<i)
                    res.pop()
        nums =[num for num in range(1,n+1)]
        answer = 0
        helper(0,len(nums),[])
        return answer
