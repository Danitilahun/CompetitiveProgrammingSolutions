# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def rob(self, root: Optional[TreeNode]) -> int:
        memo = {}
        def dp(root,robbed):
            if not root:
                return 0
            
            if (root,robbed) in memo:
                return memo[(root,robbed)]

            max_score = 0
            if robbed == 0:
                withroot = root.val + dp(root.left, 1) + dp(root.right, 1)
                withoutroot= dp(root.left,0) + dp(root.right, 0)
                max_score = max(max_score, withroot , withoutroot)
            else:
                max_score = max(max_score, dp(root.left, 0) + dp(root.right,0))
            memo[(root,robbed)] = max_score
            return max_score
        
        return dp(root,0)
